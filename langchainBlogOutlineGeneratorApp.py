# Bu kod Langchain ve Streamlit kullanarak bir blog yazÄ±sÄ± iÃ§in taslak oluÅŸturmamÄ±za yardÄ±mcÄ± olacak bir uygulama oluÅŸturur. 

import streamlit as st
from langchain_openai import ChatOpenAI
from langchain.prompts import PromptTemplate    # PromptTemplate bir metin ÅŸablonu oluÅŸturur.

st.title("ğŸ¦œğŸ”— Langchain - Blog Outline Generator App")

openai_api_key = "sk-proj-CjCrQtfnzXk6DJdWlB6lT3BlbkFJ5g9P1a0uUZQEb284IFnB"

# openai_api_key = st.sidebar.text_input("OpenAI API Key", type="password")

# blog_outline fonksiyonu blog iÃ§in topic konusunda bir taslak oluÅŸturur. template deÄŸiÅŸkeni dil modelinin belirli bir gÃ¶revi nasÄ±l yerine getireceÄŸini anlatan bir ÅŸablon metnini iÃ§erir. {topic} ÅŸablon metninde yer tutucu (placeholder) olarak kullanÄ±lÄ±r. KullanÄ±cÄ±nÄ±n girdiÄŸi konu {topic}'e yerleÅŸir. input_variables parametresi ÅŸablon metnindeki yer tutucularÄ±n hangi giriÅŸ deÄŸiÅŸkenleri ile doldurulacaÄŸÄ±nÄ± belirtir. template=template parametresi tanÄ±mlanan ÅŸablon metnini belirtir. prompt, PromptTemplate sÄ±nÄ±fÄ±ndan oluÅŸturulmuÅŸ bir nesnedir. format metodu ÅŸablondaki yer tutucularÄ± belirli giriÅŸ verileri ile doldurur. llm dil modeline prompt_query metni gÃ¶nderilir ve modelin bu metne yanÄ±t Ã¼retmesi saÄŸlanÄ±r. 

def blog_outline(topic):
    # LLM modelinin baÅŸlatÄ±lmasÄ±
    llm = ChatOpenAI(model_name="gpt-3.5-turbo", openai_api_key=openai_api_key)
    # Prompt
    template = "As an experienced data scientist and technical writer, generate an outline for a blog about {topic}."
    prompt = PromptTemplate(input_variables=["topic"], template=template)
    # Prompt ÅŸablonunun doldurulmasÄ±
    prompt_query = prompt.format(topic=topic)
    # LLM modelinin Ã§alÄ±ÅŸtÄ±rÄ±lmasÄ±
    response = llm.invoke(prompt_query)
    # Print results
    return st.info(response)

# st.text_input kullanÄ±rsak prompt'un saÄŸ altÄ±nda press enter to submit form yazar. st.text_area kullanÄ±rsak press ctrl+enter to submit form yazar.

with st.form("myform"):
    topic_text = st.text_input("Enter prompt:", "")
    submitted = st.form_submit_button("Submit")
    if not openai_api_key:
        st.info("Please add your OpenAI API key to continue.")
    elif submitted:
        blog_outline(topic_text)