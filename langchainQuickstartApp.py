# OpenAI'Ä±n dil modelini kullanarak web uygulamasÄ± oluÅŸturur ve kullanÄ±cÄ±larÄ±n sorularÄ±na yanÄ±t verir.

import streamlit as st      # Web uygulamasÄ± oluÅŸturmak iÃ§in kullanÄ±lÄ±r.
from langchain_openai.llms import OpenAI     # OpenAI sÄ±nÄ±fÄ± Langchain kÃ¼tÃ¼phanesinin bir parÃ§asÄ±dÄ±r ve OpenAI api ile etkileÅŸim kurmamÄ±zÄ± saÄŸlar.

st.title("ğŸ¦œğŸ”— Langchain Quickstart App")

openai_api_key = "sk-proj-CjCrQtfnzXk6DJdWlB6lT3BlbkFJ5g9P1a0uUZQEb284IFnB"

with st.sidebar:
    # openai_api_key = st.text_input("OpenAI API Key", type="password")
    "[Get an OpenAI API key](https://platform.openai.com/account/api-keys)"

# generate_response fonksiyonu OpenAI dil modelini kullanarak verilen metne yanÄ±t Ã¼retir. OpenAI sÄ±nÄ±fÄ±ndan bir Ã¶rnek oluÅŸturduk. temperature modelin yanÄ±tlarÄ±nÄ±n rastgeleliÄŸini belirler. 0.7 deÄŸeri modelin yaratÄ±cÄ± ama dengeli yanÄ±t Ã¼retmesini saÄŸlar. llm(input_text) input_text parametresini OpenAI dil modeline gÃ¶nderir. Bu model verilen metne uygun yanÄ±t Ã¼retir. st.info() Streamlit'in bilgi mesajÄ± fonksiyonudur. Modelin Ã¼rettiÄŸi yanÄ±tÄ± uygulamanÄ±n arayÃ¼zÃ¼nde bilgi mesajÄ± olarak gÃ¶sterir. Genelde mavi arka planda vurgulanÄ±r. 
# KullanÄ±cÄ±ya sadece bilgi veya sonuÃ§ gÃ¶steren fonksiyonlarda return kullanÄ±lmaz, amaÃ§ kullanÄ±cÄ±ya bir ÅŸeyler gÃ¶stermektir ve doÄŸrudan kullanÄ±cÄ± arayÃ¼zÃ¼ne etki eder. YanÄ±tÄ± baÅŸka fonksiyon veya iÅŸlemle kullanmak isteseydik(deÄŸer dÃ¶ndÃ¼rmek) return kullanÄ±rdÄ±k.

def generate_response(input_text):
    llm = OpenAI(temperature=0.0, openai_api_key=openai_api_key)
    response = llm.invoke(input_text)
    st.info(response)
    # st.info(llm(input_text))

# Bu kod Streamlit'te bir form oluÅŸturur. with bloÄŸu kullanÄ±larak formun iÃ§eriÄŸi tanÄ±mlanÄ±r. st.text_area kullanÄ±cÄ±nÄ±n metin girmesini saÄŸlayan alan oluÅŸturur. Enter text metin alanÄ±nÄ±n Ã¼stÃ¼nde bulunan etikettir, baÅŸlÄ±ktÄ±r. Metin alanÄ±nda varsayÄ±lan olarak doldurulan baÅŸlangÄ±Ã§ metni vardÄ±r. st.form_submit_button("Submit") formun gÃ¶nderilmesi iÃ§in bir buton oluÅŸturur. Bu buton tÄ±klandÄ±ÄŸÄ±nda form gÃ¶nderilir ve formdaki veriler iÅŸlenir. submitted deÄŸiÅŸkeni formun gÃ¶nderilip gÃ¶nderilmediÄŸini kontrol eder. Buton tÄ±klandÄ±ysa True olur. EÄŸer api anahtarÄ± mevcutsa ve submitted = True ise generate_response fonksiyonu Ã§aÄŸÄ±rÄ±lÄ±r ve text deÄŸiÅŸkenindeki metni bu fonksiyona geÃ§irir. Bu fonksiyon OpenAI api'sine metni gÃ¶nderir ve yanÄ±tÄ± alÄ±r.

with st.form("my_form"):
    text = st.text_area("Enter text:", "What are 3 key advice for learning how to code?")
    submitted = st.form_submit_button("Submit")
    if not openai_api_key:
        st.info("Please add your OpenAI API key to continue.")
    elif submitted:
        generate_response(text)